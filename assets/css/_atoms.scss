@import "tokens";

.row {
  display: flex;
  flex-direction: row;

  &.wrappable {
    flex-wrap: wrap;
  }
}

.col {
  display: flex;
  flex-direction: column;
}

.push {
  flex: auto;
}

.fill-parent {
  flex: auto;
}

@each $qkey, $val in $media-queries {
  @media #{$val} {
    .q-#{$qkey}-fill-parent {
      flex: auto;
    }
  }
}

.align-start {
  align-items: flex-start;
}
.align-center {
  align-items: center;
}
.align-end {
  align-items: flex-end;
}
.align-baseline {
  align-items: baseline;
}

.align-self-start {
  align-self: flex-start;
}
.align-self-center {
  align-self: center;
}
.align-self-end {
  align-self: flex-end;
}
.align-self-baseline {
  align-self: baseline;
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-align-start {
      align-items: flex-start;
    }
    .q-#{$key}-align-center {
      align-items: center;
    }
    .q-#{$key}-align-stretch {
      align-items: stretch;
    }
    .q-#{$key}-align-end {
      align-items: flex-end;
    }
  }
}

.justify-start {
  justify-content: flex-start;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-justify-stretch {
      justify-content: stretch;
    }
    .q-#{$key}-justify-start {
      justify-content: flex-start;
    }
    .q-#{$key}-justify-center {
      justify-content: center;
    }
    .q-#{$key}-justify-end {
      justify-content: flex-end;
    }
  }
}

@each $key, $val in $spacings {
  .row.sp-#{$key} > *:not(:last-child):not(.push) {
    margin-right: $val;
  }

  .col.sp-#{$key} > *:not(:last-child):not(.push) {
    margin-bottom: $val;
  }
}

@each $key, $val in $media-queries {
  @media #{$val} {
    @each $spkey, $val in $spacings {
      .row.q-#{$key}-sp-#{$spkey} > *:not(:last-child):not(.push) {
        margin-right: $val;
      }

      .col.q-#{$key}-sp-#{$spkey} > *:not(:last-child):not(.push) {
        margin-bottom: $val;
      }
    }

    .q-#{$key}-col {
      display: flex;
      flex-direction: column;
      @each $spkey, $val in $spacings {
        &.sp-#{$spkey} > *:not(:last-child):not(.push) {
          margin-right: 0;
          margin-bottom: $val;
        }
      }

      @each $spkey, $val in $spacings {
        &.q-#{$key}-sp-#{$spkey} > *:not(:last-child):not(.push) {
          margin-bottom: $val;
        }
      }
    }
  }
}

@each $key, $val in $spacings {
  .pt-#{$key} {
    padding-top: $val;
  }
  .pb-#{$key} {
    padding-bottom: $val;
  }
  .pl-#{$key} {
    padding-left: $val;
  }
  .pr-#{$key} {
    padding-right: $val;
  }
  .pa-#{$key} {
    padding: $val;
  }
  .px-#{$key} {
    padding-left: $val;
    padding-right: $val;
  }
  .py-#{$key} {
    padding-top: $val;
    padding-bottom: $val;
  }

  .top-#{$key} {
    top: $val;
  }
  .left-#{$key} {
    left: $val;
  }
  .right-#{$key} {
    right: $val;
  }
  .bottom-#{$key} {
    bottom: $val;
  }
}
.grid {
  display: flex;
  flex-wrap: wrap;

  @each $key, $val in $spacings {
    &.sp-#{$key} {
      margin-left: -$val / 2;
      margin-right: -$val / 2;
      margin-bottom: -$val;
      > * {
        padding-left: $val / 2;
        padding-right: $val / 2;
        padding-bottom: $val;
      }
    }
  }

  @each $qkey, $val in $media-queries {
    @media #{$val} {
      @each $key, $val in $spacings {
        &.q-#{$qkey}-sp-#{$key} {
          margin-left: -$val / 2;
          margin-right: -$val / 2;
          margin-bottom: -$val;
          > * {
            padding-left: $val / 2;
            padding-right: $val / 2;
            padding-bottom: $val;
          }
        }
      }
    }
  }
}

.top-100 {
  top: 100%;
}
.left-100 {
  left: 100%;
}
.right-100 {
  right: 100%;
}
.bottom-100 {
  bottom: 100%;
}

@each $qkey, $val in $media-queries {
  @media #{$val} {
    @each $key, $val in $spacings {
      .q-#{$qkey}-pt-#{$key} {
        padding-top: $val;
      }
      .q-#{$qkey}-pb-#{$key} {
        padding-bottom: $val;
      }
      .q-#{$qkey}-pl-#{$key} {
        padding-left: $val;
      }
      .q-#{$qkey}-pr-#{$key} {
        padding-right: $val;
      }
      .q-#{$qkey}-pa-#{$key} {
        padding: $val;
      }
      .q-#{$qkey}-px-#{$key} {
        padding-left: $val;
        padding-right: $val;
      }
      .q-#{$qkey}-py-#{$key} {
        padding-top: $val;
        padding-bottom: $val;
      }
    }
  }
}

.elevation-sm {
  box-shadow: $shadow-sm;
}
.elevation-md {
  box-shadow: $shadow-md;
}

@each $key, $val in $colors {
  .bg-#{"" + $key} {
    background-color: $val;
  }
}

@each $key, $val in $colors {
  .text-#{"" + $key} {
    color: $val;
  }
}

.relative {
  position: relative;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.sticky {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}

@each $qkey, $val in $media-queries {
  @media #{$val} {
    .q-#{$qkey}-relative {
      position: relative;
    }
  }
}

.hidden {
  display: none;
}

.inset-full {
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

.inset-x {
  right: 0;
  left: 0;
}

.inset-x-1_3 {
  right: 33%;
  left: 33%;
}

.inset-y {
  top: 0;
  bottom: 0;
}

.inset-header {
  top: 4.5rem;
  left: 0;
  width: 100%;
  height: calc(100% - 4.5rem);
}

.rounded-xs {
  border-radius: 0.2rem;
}
.rounded-sm {
  border-radius: 0.3rem;
}
.rounded-md {
  border-radius: 5rem;
}
.rounded-xl {
  border-radius: 1rem;
}

.rounded-full {
  border-radius: 50%;
}

@each $key, $val in $spacings {
  .width-#{$key} {
    width: $val;
  }
}
@each $key, $val in $dimensions {
  .width-#{$key} {
    width: $val;
  }
}

@each $key, $val in ("1_2": 50%, "1_3": 33.333%, "2_3": 66.666%, "1_4": 25%, "40p": 40%) {
  .width-#{$key} {
    width: $val;
  }
}

@each $key, $val in $media-queries {
  @media #{$val} {
    @each $wkey, $val in ("1_2": 50%, "1_3": 33.333%, "1_4": 25%) {
      .q-#{$key}-width-#{$wkey} {
        width: $val;
      }
    }
  }
}

.width-full {
  width: 100%;
}
@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-width-full {
      width: 100%;
    }
  }
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-is-first {
      order: -1;
    }
  }
}

@each $key, $val in $max-widths {
  .maxwidth-#{$key} {
    max-width: $val;
  }
}

@each $qkey, $val in $media-queries {
  @media #{$val} {
    @each $key, $val in $max-widths {
      .q-#{$qkey}-maxwidth-#{$key} {
        max-width: $val;
      }
    }
  }
}

@each $key, $val in $spacings {
  .height-#{$key} {
    height: $val;
  }
}
@each $key, $val in $dimensions {
  .height-#{$key} {
    height: $val;
  }
}

@each $qkey, $val in $media-queries {
  @media #{$val} {
    @each $key, $val in $spacings {
      .q-#{$qkey}-height-#{$key} {
        height: $val;
      }
    }
    @each $key, $val in $dimensions {
      .q-#{$qkey}-height-#{$key} {
        height: $val;
      }
    }
  }
}

.minheight-75vh {
  min-height: 75vh;
  @media only screen and (min-width : 150vh) {
    min-height: 70vh;
  }
  @media only screen and (min-width : 200vh) {
    min-height: 67vh;
  }
}

.minheight-100vh {
  min-height: 100vh;
}

.height-screen {
  min-height: 100vh;
  &:not(.sticky) {
    body.is-safari & {
      min-height: 100vh;
    }
  }
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-height-screen {
      min-height: -webkit-fill-available;
    }
  }
}

@each $key, $val in $spacings {
  .minheight-#{$key} {
    min-height: $val;
  }
}
@each $key, $val in $dimensions {
  .minheight-#{$key} {
    min-height: $val;
  }
}

@each $key, $val in $font-sizes {
  .text-#{$key} {
    font-size: $val;
  }
}
@each $key, $val in $media-queries {
  @media #{$val} {
    @each $tkey, $val in $font-sizes {
      .q-#{$key}-text-#{$tkey} {
        font-size: $val;
      }
    }
  }
}
.font-light {
  font-weight: 300;
}
.font-normal {
  font-weight: 400;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.font-bold {
  font-weight: bold;
}

.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-text-left {
      text-align: left;
    }
    .q-#{$key}-text-right {
      text-align: right;
    }
    .q-#{$key}-text-center {
      text-align: center;
    }
  }
}

.font-heading {
  font-family: LetterGothic, sans-serif;
  line-height: 1.3;
}

.font-small-heading {
  font-weight: bold;
  line-height: 1.3;
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .hide-#{$key} {
      display: none;
    }
  }
}

@each $key, $val in $media-queries {
  .show-#{$key} {
    display: none;
    @media #{$val} {
      display: block;
      &.col,
      &.row {
        display: flex;
      }
    }
  }
}

.uppercase {
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

.underline {
  text-decoration: underline;
}

@each $index in (0, 1, 2, 3, 4, 5) {
  .zindex-#{$index} {
    z-index: $index;
  }
}

.fill-current {
  fill: currentColor;
}

.non-interactive {
  pointer-events: none;
}

.interactive {
  pointer-events: auto;
}

.no-shrink {
  flex-shrink: 0;
}

.overflow-hidden {
  overflow: hidden;
}

@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-first {
      order: -1;
    }
  }
}
@each $key, $val in $media-queries {
  @media #{$val} {
    .q-#{$key}-height-aspect-16-9 {
      min-height: 0;
      height: 0;
      padding-bottom: #{9 / 16 * 100%};
    }
  }
}

[data-init-fade] {
  transition: opacity 0.5s ease-out;
}

.opacity-0 {
  transition: opacity 0.5s ease-out;
  opacity: 0;
}
.opacity-1 {
  opacity: 1;
}
